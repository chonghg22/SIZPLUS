<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="board">

	<sql id="listWhere">
		<if test="openYn == 'Y'.toString()">
			and a.open_yn = 'Y'
		</if>
		<if test="schStr != null and schStr != ''">
		<choose>
			<when test="schFld == '1'.toString()">
			and	a.title like concat('%' , #{schStr} , '%')
			</when>
			<when test="schFld == '2'.toString()">
			and	a.input_nm like concat('%' , #{schStr} , '%')
			</when>
			<otherwise>
			and	(
				a.title like concat('%' , #{schStr} , '%')
				or
				a.input_nm like concat('%' , #{schStr} , '%')
			)
			</otherwise>
		</choose>
		</if>
<!-- 		<if test="bbsId == 'faq' and typeEtc !=null and typeEtc !=''"> -->
<!-- 		and a.type_etc = #{typeEtc} -->
<!-- 		</if> -->
<!-- 		<if test="openYn != null and openYn !=''"> -->
<!-- 		and a.open_yn = #{openYn} -->
<!-- 		</if> -->
	</sql>
	
	<!-- 게시글 목록 -->
	<select id="selectBoardList" parameterType="hashmap" resultType="hashmap">
		/*selectBoardList*/
		select
			a.board_seq,
			a.bbs_id,
			a.open_yn,
			a.title,
			a.contents,
			a.input_nm,
			a.input_ip,
			a.input_date,
			a.edit_ip,
			a.edit_date,
			a.good_cnt,
			(select count(*) cnt from e_comment b where a.board_seq = b.board_seq) commentCnt,
			a.hit
		from e_board a
		where
		bbs_id = #{bbsId}
		<include refid="listWhere" />
		order by a.board_seq desc
		<if test="mngType != 'Y'.toString() ">
		limit #{firstIndex}, #{recordCountPerPage}
		</if>
	</select>
	
	<!-- 게시글 갯수 -->
	<select id="selectBoardCnt" parameterType="hashmap" resultType="int">
		/*selectBoardCnt*/
		select
			count(*) cnt
		from e_board a
		where
		a.bbs_id = #{bbsId}
		<include refid="listWhere" />
	</select>
	
	<!-- 게시글 상세보기 -->
	<select id="selectBoardView" parameterType="hashmap" resultType="hashmap">
		/*selectBoardView*/
		select
			a.board_seq,
			a.bbs_id,
			a.open_yn,
			a.title,
			a.contents,
			a.input_nm,
			a.input_ip,
			a.input_date,
			a.edit_ip,
			a.edit_date,
			a.good_cnt,
			a.file_id,
			a.bad_cnt,
			a.hit
		from e_board a
		where 
		a.bbs_id = #{bbsId}
		and
		a.board_seq = #{boardSeq}
	</select>
	
	<!-- 게시글 등록 -->
	<insert id="insertBoard">
		/*insertBoard*/
		insert into e_board(
			bbs_id,
			open_yn,
			title,
			contents,
			password,
			file_id,
			input_id,
			input_nm,
			input_date
		)values(
			#{bbsId},
			#{openYn},
			#{title},
			#{contents},
			#{password},
			#{fileId},
			#{inputId},
			#{inputNm},
			now()
		)
	</insert>
	
	<!-- 게시글 수정 -->
	<update id="updateBoard">
		/*updateBoard*/
		update e_board set
			title = #{title},
			contents = #{contents},
			<if test="updateFile == 'Y'.toString()">
			file_id = #{fileId},
			</if>
			<if test="openYn != null and openYn != ''">
			open_yn = #{openYn},
			</if>
			edit_id = #{editId},
			password = #{password},
			edit_date = now()
		where
			board_seq = #{boardSeq}
		
	</update>
	
	<!-- 게시글 조회수 증가 -->
	<update id="updateBoardHitCount">
		/*updateBoardHitCount*/
		update e_board set
			hit = hit +1
		where 
			board_seq = #{boardSeq}
	</update>
	
	<!-- 게시글 추천  -->
	<update id="updateBoardGoodCount">
		/*updateBoardGoodCount*/
		update e_board set
			good_cnt = good_cnt +1
		where 
			board_seq = #{boardSeq}
	</update>
	
	<!-- 게시글 비추천  -->
	<update id="updateBoardBadCount">
		/*updateBoardBadCount*/
		update e_board set
			bad_cnt = bad_cnt +1
		where 
			board_seq = #{boardSeq}
	</update>
	
	<!-- 게시글 삭제 -->
	<delete id="deleteBoard">
		/*deleteBoard*/
		delete from e_board where board_seq = #{boardSeq}
	</delete>
	
	<!-- 해당게시글의 댓글순서 -->
	<select id="selectCommentNumCheck" parameterType="hashmap" resultType="String">
		/*selectCommentNumCheck*/
		select
			a.comment_no
		from e_comment a
		where
		a.board_seq = #{boardSeq}
		order by a.comment_no desc
		limit 1
	</select>
	
	<!-- 해당 게시글에 대한 답글 등록 -->
	<insert id="insertComment">
		/*insertBoard*/
		insert into e_comment(
			board_seq,
			member_seq,
			comment_no,
			recomment_no,
			comment_contents,
			reg_dt
		)values(
			#{boardSeq},
			#{memberSeq},
			#{commentNo},
			#{recommentNo},
			#{commentContents},
			now()
		)
	</insert>
	
	<!-- 해당 게시글의 댓글 목록  -->
	<select id="selectBoardCommentList" parameterType="hashmap" resultType="hashmap">
		/*selectBoardCommentList*/
		select
			a.comment_seq,
			a.board_seq,
			(select member_nickname from e_member b where a.member_seq = b.member_seq) nickname,
			a.comment_no,
			a.recomment_no,
			a.comment_contents,
			a.reg_dt
		from e_comment a
		where
		board_seq = #{boardSeq}
		order by a.comment_no desc, a.recomment_no asc
	</select>
	
	<!-- 체크된 게시글 삭제 처리 -->
	<delete id="deleteBoardChk">
		/*deleteBoardChk*/
		delete from  e_board
		where
			bbs_id = #{bbsId}
			and
			board_seq  in
			<foreach item="item" index="index" open="(" close=")" separator="," collection="chkSeq">
			#{item}
			</foreach>
	</delete>
	
</mapper>